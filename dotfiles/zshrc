COMPLETION_WAITING_DOTS="false"

# Zsh prompt
ZSH_THEME="3den"

# path exports
CABAL_DIR=$HOME/.cabal/bin
HEROKU_DIR=/usr/local/heroku/bin
CABAL_SANDBOX_DIR=.cabal-sandbox/bin/*
RVM_DIR=$HOME/.rvm/bin
RVM_DIR2=$HOME/.rvm/gems/ruby-*/bin/*
DOT_LOCAL_DIR=$HOME/.local/bin
SCALA_DIR=$HOME/scala-2.11.6/bin
BIN_DIR=$HOME/bin
LOCAL_DIR=$HOME/local/bin
ELM_DIR=$HOME/elm-latest-install/Elm-Platform/0.15/bin
STACK_DIR=$HOME/.stack/programs/i386-linux/ghc-7.8.4/bin/
NVM_DIR=$HOME/.nvm

PATH+=$PATH  # don't mangle the path
if [ -d "$CABAL_DIR" ]; then PATH+=:$CABAL_DIR; fi
if [ -d "$HEROKU_DIR" ]; then PATH+=:$HEROKU_DIR; fi
if [ -d "$CABAL_SANDBOX_DIR" ]; then PATH+=:$CABAL_SANDBOX_DIR; fi
if [ -d "$RVM_DIR" ]; then PATH+=:$RVM_DIR; fi
if [ -d "$RVM_DIR2" ]; then PATH+=:$RVM_DIR2; fi
if [ -d "$DOT_LOCAL_DIR" ]; then PATH+=:$DOT_LOCAL_DIR; fi
if [ -d "$SCALA_DIR" ]; then PATH+=:$SCALA_DIR; fi
if [ -d "$BIN_DIR" ]; then PATH+=:$BIN_DIR; fi
if [ -d "$LOCAL_DIR" ]; then PATH+=:$LOCAL_DIR; fi
if [ -d "$ELM_DIR" ]; then PATH+=:$ELM_DIR; fi
if [ -d "$STACK_DIR" ]; then PATH+=:$STACK_DIR; fi
if [ -d "$NVM_DIR" ]; then PATH+=$NVM_DIR; fi
export PATH

# elm exports
ELM_HOME=$HOME/elm-latest-install/Elm-Platform/0.15/share/i386-linux-ghc-7.6.3/elm-reactor-0.3.1

# set some variables for later use in the script
ZSH=$HOME/.oh-my-zsh
D_HOME=$HOME/dotfiles/dotfiles

# python pyenv
export PYENV_ROOT=$HOME/.pyenv
export PATH=$PYENV_ROOT/bin:$PATH

# source my aliases + ohmyzsh file
source $ZSH/oh-my-zsh.sh
source $D_HOME/alias.zsh

# editor export
export EDITOR="vim"
export USE_EDITOR=$EDITOR
export VISUAL=$EDITOR

# terminal tmux export
export TERM="xterm-256color"

# python exports
export PYTHONASYNCIODEBUG=1
export PYTHONWARNINGS="ignore"
export PYTHONDONTWRITEBYTECODE=True

# history options
export HISTIGNORE="&:ls:[bf]g:exit:reset:clear:cd:cd ..:cd.."
export HISTSIZE=25000
export HISTFILE=~/.zsh_history
export SAVEHIST=10000
setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt HIST_VERIFY

# completion selection by menu for kill
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'

# tab completion for PIDs
zstyle ':completion:*:*:*:*:processes' command "ps -u `whoami` -o pid,user,comm,command -w -w"
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always

# use caching
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# allow bash style comments
setopt interactivecomments

# spelling corrector
setopt CORRECT

# terminal vim
bindkey -v
export KEYTIMEOUT=10
bindkey -M viins 'jk' vi-cmd-mode
bindkey -M viins '^k' kill-line
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward

# show which vim mode we are in
precmd() { RPROMPT="" }
zle-keymap-select() {
  RPROMPT=""
  [[ $KEYMAP = vicmd ]] && RPROMPT="(COMMAND MODE)"
  () { return $__prompt_status }
  zle reset-prompt
}
zle-line-init() { typeset -g __prompt_status="$?" }
zle -N zle-keymap-select
zle -N zle-line-init

# virtualenv stuff
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Devel
[ -e /usr/bin/virtualenvwrapper.sh ]       && source /usr/bin/virtualenvwrapper.sh
[ -e /usr/local/bin/virtualenvwrapper.sh ] && source /usr/local/bin/virtualenvwrapper.sh
[ -e ~/.local/bin/virtualenvwrapper.sh ]   && source ~/.local/bin/virtualenvwrapper.sh

# RVM
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# remind me!
command -v remind >/dev/null 2>&1 && remind -h ~/.reminders || {
    echo "'remind' program is not installed" >&2;
}

# pyenv
command -v pyenv >/dev/null 2>&1 && eval "$(pyenv init -)"

# nvm
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
command -v nvm >/dev/null 2>&1 && nvm use 5.5.0 >/dev/null 2>&1
